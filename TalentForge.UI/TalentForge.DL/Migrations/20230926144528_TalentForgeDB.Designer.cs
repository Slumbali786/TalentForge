// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalentForge.DL.DataContext;

#nullable disable

namespace TalentForge.DL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230926144528_TalentForgeDB")]
    partial class TalentForgeDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TalentForge.DL.Entities.CompUser", b =>
                {
                    b.Property<int>("CUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CUID"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUID");

                    b.ToTable("CompUsers");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Company_User.CVTemplates", b =>
                {
                    b.Property<int>("CVTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CVTID"));

                    b.Property<int?>("CompUserCUID")
                        .HasColumnType("int");

                    b.Property<string>("FileLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CVTID");

                    b.HasIndex("CompUserCUID");

                    b.ToTable("CVTemplates");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Company_User.Jobs", b =>
                {
                    b.Property<int>("JID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JID"));

                    b.Property<int?>("CompUserCUID")
                        .HasColumnType("int");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JID");

                    b.HasIndex("CompUserCUID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Messages", b =>
                {
                    b.Property<int>("MID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MID"));

                    b.Property<string>("CUMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompUserCUID")
                        .HasColumnType("int");

                    b.Property<string>("RUMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegUserRUID")
                        .HasColumnType("int");

                    b.HasKey("MID");

                    b.HasIndex("CompUserCUID");

                    b.HasIndex("RegUserRUID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.RegUser", b =>
                {
                    b.Property<int>("RUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RUID"));

                    b.Property<string>("ContactNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RUID");

                    b.ToTable("RegUsers");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.CVs", b =>
                {
                    b.Property<int>("CVID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CVID"));

                    b.Property<string>("FileLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegUserRUID")
                        .HasColumnType("int");

                    b.HasKey("CVID");

                    b.HasIndex("RegUserRUID");

                    b.ToTable("CreatedCVs");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.EmployeeHistory", b =>
                {
                    b.Property<int>("EHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EHID"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegUserRUID")
                        .HasColumnType("int");

                    b.HasKey("EHID");

                    b.HasIndex("RegUserRUID");

                    b.ToTable("EmployeeHistories");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.HigherEducation", b =>
                {
                    b.Property<int>("HEID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HEID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CollegeNameLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegUserRUID")
                        .HasColumnType("int");

                    b.HasKey("HEID");

                    b.HasIndex("RegUserRUID");

                    b.ToTable("HigherEducations");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.JobsApplied", b =>
                {
                    b.Property<int>("JAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JAID"));

                    b.Property<int?>("JobsJID")
                        .HasColumnType("int");

                    b.Property<int?>("RegUserRUID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JAID");

                    b.HasIndex("JobsJID");

                    b.HasIndex("RegUserRUID");

                    b.ToTable("JobsApplied");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.SchoolInfo", b =>
                {
                    b.Property<int>("SIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SIID"));

                    b.Property<int>("FinalYear")
                        .HasColumnType("int");

                    b.Property<int>("HGradePassed")
                        .HasColumnType("int");

                    b.Property<string>("LSchoolAttended")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegUserRUID")
                        .HasColumnType("int");

                    b.Property<bool>("SubAccounting")
                        .HasColumnType("bit");

                    b.Property<bool>("SubAfrik")
                        .HasColumnType("bit");

                    b.Property<bool>("SubArt")
                        .HasColumnType("bit");

                    b.Property<bool>("SubBusiness")
                        .HasColumnType("bit");

                    b.Property<bool>("SubDrama")
                        .HasColumnType("bit");

                    b.Property<bool>("SubEng")
                        .HasColumnType("bit");

                    b.Property<bool>("SubIT")
                        .HasColumnType("bit");

                    b.Property<bool>("SubLO")
                        .HasColumnType("bit");

                    b.Property<bool>("SubLS")
                        .HasColumnType("bit");

                    b.Property<bool>("SubMath")
                        .HasColumnType("bit");

                    b.Property<bool>("SubMathL")
                        .HasColumnType("bit");

                    b.Property<bool>("SubPhysics")
                        .HasColumnType("bit");

                    b.Property<bool>("SubTourism")
                        .HasColumnType("bit");

                    b.Property<bool>("SubZulu")
                        .HasColumnType("bit");

                    b.HasKey("SIID");

                    b.HasIndex("RegUserRUID");

                    b.ToTable("SchoolInfos");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.Skills", b =>
                {
                    b.Property<int>("SID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SID"));

                    b.Property<int?>("RegUserRUID")
                        .HasColumnType("int");

                    b.Property<string>("Skill1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill7")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SID");

                    b.HasIndex("RegUserRUID");

                    b.ToTable("RSkills");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Company_User.CVTemplates", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.CompUser", null)
                        .WithMany("CVTemplates")
                        .HasForeignKey("CompUserCUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Company_User.Jobs", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.CompUser", null)
                        .WithMany("Jobs")
                        .HasForeignKey("CompUserCUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Messages", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.CompUser", null)
                        .WithMany("Messages")
                        .HasForeignKey("CompUserCUID");

                    b.HasOne("TalentForge.DL.Entities.RegUser", null)
                        .WithMany("Messages")
                        .HasForeignKey("RegUserRUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.CVs", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.RegUser", null)
                        .WithMany("CVs")
                        .HasForeignKey("RegUserRUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.EmployeeHistory", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.RegUser", null)
                        .WithMany("EmployeeHistories")
                        .HasForeignKey("RegUserRUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.HigherEducation", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.RegUser", null)
                        .WithMany("HigherEducations")
                        .HasForeignKey("RegUserRUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.JobsApplied", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.Company_User.Jobs", null)
                        .WithMany("JobsApplied")
                        .HasForeignKey("JobsJID");

                    b.HasOne("TalentForge.DL.Entities.RegUser", null)
                        .WithMany("JobsApplied")
                        .HasForeignKey("RegUserRUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.SchoolInfo", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.RegUser", null)
                        .WithMany("SchoolInfos")
                        .HasForeignKey("RegUserRUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Regular_User.Skills", b =>
                {
                    b.HasOne("TalentForge.DL.Entities.RegUser", null)
                        .WithMany("Skills")
                        .HasForeignKey("RegUserRUID");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.CompUser", b =>
                {
                    b.Navigation("CVTemplates");

                    b.Navigation("Jobs");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.Company_User.Jobs", b =>
                {
                    b.Navigation("JobsApplied");
                });

            modelBuilder.Entity("TalentForge.DL.Entities.RegUser", b =>
                {
                    b.Navigation("CVs");

                    b.Navigation("EmployeeHistories");

                    b.Navigation("HigherEducations");

                    b.Navigation("JobsApplied");

                    b.Navigation("Messages");

                    b.Navigation("SchoolInfos");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
